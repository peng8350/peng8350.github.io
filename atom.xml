<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jpeng的个人主页</title>
  
  <subtitle>记录人生中碰到的有趣事和发现!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://peng8350.github.io/"/>
  <updated>2018-04-24T14:45:48.000Z</updated>
  <id>https://peng8350.github.io/</id>
  
  <author>
    <name>Jpeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter第一个坑</title>
    <link href="https://peng8350.github.io/2018/04/24/flutter-p1/"/>
    <id>https://peng8350.github.io/2018/04/24/flutter-p1/</id>
    <published>2018-04-24T11:23:43.000Z</published>
    <updated>2018-04-24T14:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>先说下这个框架吧,总体上感觉不错,性能总体上测试过了,加载大量图片和数据的情况性能绝对完爆React native,并且语法我也一看就觉得很熟悉,dart这个语言对于熟悉Android开发的人来说很容易上手,这挺像是Java和javascript的结合体,基本不用看语法也可以入门,并且有react native的状态这个概念更容易理解,总的来说,如果给我react native和flutter选一个来开发大型App的话,毫无疑问,我肯定是选Flutter,最重要的是性能,最重要的是性能,最重要的是性能!!</p><a id="more"></a><h2 id="掉了什么坑"><a href="#掉了什么坑" class="headerlink" title="掉了什么坑?"></a>掉了什么坑?</h2><p>不吹了,该时候进入正题了,其实本来我是想找一下如何实现Toast的,结果百度这东西很多都找不到的,毕竟这个没有RN那么火吧,很少人去爬坑。看文档,没有Toast概念提及到好像,但也有SnackBar这个Material的控件是实现Toast,虽然我没用过这个,但以前起码知道一点它要干嘛的。看文档,就那么几行代码实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Scaffold.of(context).showSnackBar(new SnackBar(</div><div class="line">  content: new Text(&quot;测试Toast&quot;),</div><div class="line">));</div></pre></td></tr></table></figure><p>等等,你以为真的那么简单吗?运行点击没反应,显示下面的异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Another exception was thrown: Scaffold.of() called with a context that does not contain a Scaffold</div></pre></td></tr></table></figure><p>它是说我尝试去通过Context来获取Scaffold这个东西时找不到, Scaffold相当于布局结构的东西,可能是通过这个东西来确定Toast到底要摆放在哪个位置上。问题来了,为什么找不到?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"> @override</div><div class="line"> Widget build(BuildContext context) &#123;</div><div class="line">   return new MaterialApp(</div><div class="line">     color: const Color.fromARGB(255, 255, 255, 255),</div><div class="line">     home: new Scaffold(</div><div class="line">         backgroundColor: const Color.fromRGBO(255, 255, 255, 1.0),</div><div class="line">         appBar: new CupertinoNavigationBar(</div><div class="line">             middle: new GestureDetector(</div><div class="line">                 onTap: () &#123;</div><div class="line">                 //这里就是展开Toast语句,只不过被我封装了</div><div class="line">                   SnackUtils.show(context);</div><div class="line">                 &#125;,</div><div class="line">                 child: new Text(&apos;we&apos;))),</div><div class="line">         body: new GestureDetector(</div><div class="line">           onTap: () &#123;</div><div class="line">             SnackUtils.show(context);</div><div class="line">           &#125;,</div><div class="line">           child: new Text(&apos;eewe&apos;),</div><div class="line">         )),</div><div class="line">.....</div></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>最后,我是通过把body里的控件再次封装到另外一个类,然后这样就解决了这个问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">  home: new Scaffold(</div><div class="line">          backgroundColor: const Color.fromRGBO(255, 255, 255, 1.0),</div><div class="line">          appBar: new CupertinoNavigationBar(</div><div class="line">              middle: new GestureDetector(</div><div class="line">                  onTap: () &#123;</div><div class="line">                    SnackUtils.show(context);</div><div class="line">                  &#125;,</div><div class="line">                  child: new Text(&apos;we&apos;))),</div><div class="line">          body: new MyHomePage(),</div><div class="line">          ),</div><div class="line">   </div><div class="line">   .........</div><div class="line">   </div><div class="line">   class MyHomePage extends StatelessWidget &#123;</div><div class="line">   @override</div><div class="line">  Widget build(BuildContext context) &#123;</div><div class="line">    // TODO: implement build</div><div class="line">    return new GestureDetector(</div><div class="line">      onTap: () &#123;</div><div class="line">        SnackUtils.show(context);</div><div class="line">      &#125;,</div><div class="line">      child: new Text(&apos;eewe&apos;),</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>不过,应该还有另外的解决办法,我的想法呢,可以事先捕获一个Scaffold全局变量,这个变量是永远存在于界面中,就像Toast.show()里的Context,可以传入getApplicationContext获得应用程序的上下文来作为容器显示Toast一样的道理。只不过现在我对这个框架还是刚学一两天,不懂怎么全局。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>感觉这是一个BUG,毕竟哪有这么麻烦要我们开多一个类去写Toast呢对吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;先说下这个框架吧,总体上感觉不错,性能总体上测试过了,加载大量图片和数据的情况性能绝对完爆React native,并且语法我也一看就觉得很熟悉,dart这个语言对于熟悉Android开发的人来说很容易上手,这挺像是Java和javascript的结合体,基本不用看语法也可以入门,并且有react native的状态这个概念更容易理解,总的来说,如果给我react native和flutter选一个来开发大型App的话,毫无疑问,我肯定是选Flutter,最重要的是性能,最重要的是性能,最重要的是性能!!&lt;/p&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="Flutter" scheme="https://peng8350.github.io/tags/Flutter/"/>
    
      <category term="Dart" scheme="https://peng8350.github.io/tags/Dart/"/>
    
      <category term="跨平台" scheme="https://peng8350.github.io/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>基于React Native的一个干货客户端</title>
    <link href="https://peng8350.github.io/2018/04/23/gankWork/"/>
    <id>https://peng8350.github.io/2018/04/23/gankWork/</id>
    <published>2018-04-23T10:14:31.000Z</published>
    <updated>2018-04-23T10:53:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gank"><a href="#Gank" class="headerlink" title="Gank"></a>Gank</h1><p>这是一个本人作为练习React Native的第一个项目,干货集中营,入门15天的第一个项目,开发时间:1个月</p><a id="more"></a><h2 id="Screenshoots"><a href="#Screenshoots" class="headerlink" title="Screenshoots"></a>Screenshoots</h2><p>Android:<br><br><img src="/art/android1.gif" alt=""><br><br><br>Ios:<br><br><img src="/art/ios1.gif" alt=""><br><br><br>Android:<br><br><img src="/art/android2.gif" alt=""><br>Ios:<br><br><br><img src="/art/ios2.gif" alt=""><br><br><br>Android:<br><br><img src="/art/android3.gif" alt=""><br>Ios:<br><br><img src="/art/ios3.gif" alt=""><br><br></p><h2 id="Third-party"><a href="#Third-party" class="headerlink" title="Third party"></a>Third party</h2><ul><li><a href="https://github.com/realm/realm-js" target="_blank" rel="noopener">Realm</a></li><li><a href="https://github.com/reactjs/redux" target="_blank" rel="noopener">Redux</a></li><li><a href="https://github.com/skv-headless/react-native-scrollable-tab-view" target="_blank" rel="noopener">react-native-scrollable-tab-view</a></li><li><a href="https://github.com/react-navigation/react-navigation" target="_blank" rel="noopener">react-navigation</a></li><li><a href="https://github.com/beefe/react-native-actionsheet" target="_blank" rel="noopener">react-native-actionsheet</a></li><li><a href="https://github.com/itinance/react-native-fs" target="_blank" rel="noopener">react-native-fs</a></li><li><a href="https://github.com/alwx/react-native-photo-view" target="_blank" rel="noopener">react-native-photo-view</a></li><li><a href="https://github.com/dancormier/react-native-swipeout" target="_blank" rel="noopener">react-native-swipeout</a></li><li><a href="https://github.com/happypancake/react-native-tab-navigator" target="_blank" rel="noopener">react-native-tab-navigator</a></li><li><a href="https://github.com/oblador/react-native-vector-icons" target="_blank" rel="noopener">react-native-vector-icons</a></li><li><a href="https://github.com/tuantle/react-native-search-header" target="_blank" rel="noopener">react-native-search-header</a></li></ul><h2 id="目前存在的问题"><a href="#目前存在的问题" class="headerlink" title="目前存在的问题"></a>目前存在的问题</h2><ul><li>搜索栏想要清除文本的文字,无法清除,搜索栏是调用别人的组件的，原作者说是官方的bug</li><li>无论是Android还是ios,只要你加上gif后,加载大量gif的同时,ui会卡顿4-10秒左右,但我又不知道怎么把ios上的gif动态效果给去掉,使用的是image,默认就是有gif的效果,官方文档没有说明如何禁止gif</li><li>scrollable-tab-view这个存在一个bug,就是用到滑动的tab的时候,组件刚初始化的时候tab的指标没有显示,点击一下或者滑动一下界面的就显示了</li><li>ios平台:跳转或者后退页面会造成两次componentdidmount或者willmount触发两次以上回调,这个问题我严重怀疑是react-navigation的bug,这个问题在它issue里很多人都提问过,尽管我尝试更新到最新版的react-navigation还是有这个问题,触发两次的回调会严重影响性能,所以跳转或者移除GankActivity这个页面时,性能严重下滑,估计就是和这个bug有关</li><li>navigationOptions想要传入一些状态的时候,很棘手,官方提供的一种方法就是this.props.navigation.setParams({})传入一个对象来获取当前组件的状态,可以是可以,但是有个致命的问题就是,无论我在willmount还是didmount调用这个方法,事实上还是需要一定时间才能把参数传进去(- -!意思是说回调willmount或didmount都要时间上的延迟),我有一个onPressRight的方法,然后通过setParams()传入navigationOptions改变它的状态,但万一用户点击页面后快速点击右边的呢?这时,我状态还没来得及传进去就GG了。说了那么多,其实我想表达的就是setParams把组件里的状态传到导航的这种方法,有一个时间上的延迟问题,不能达到立马改变。其实这个问题也是一个大众都会问到的一个问题</li></ul><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><ul><li>刚开始说实在的,并不知道redux有什么用啊,然后参考别人的写着写着之后,才明白这是一个提供给我们给多个组件共享一个组件状态的库,试想下,如果多个组件引用一个组件,这会不会导致代码不断传参传参呢?</li><li>我用过realm这个数据库后,下次我要考虑要不要继续用这个好?因为这个有个极大的坑爹地方,最新版本开调试后subscrition is not defined?下降版本没有这个问题,另外,如果你删除了node_modules后重新安装,然后run-ios,你会发现你卡住了,一直downloading realm-sync-……无法下载,估计就是被墙了，每次都要卡那么几个小时,无语…开shadowsocks翻墙也是无解。</li><li>性能还是比原生差很多很多的,如果flatlist要加载超大量的数据的话就直接gg了,所以用react native写app最蛋疼的就是性能上的问题了！</li></ul><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢@代码家提供的数据</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Gank&quot;&gt;&lt;a href=&quot;#Gank&quot; class=&quot;headerlink&quot; title=&quot;Gank&quot;&gt;&lt;/a&gt;Gank&lt;/h1&gt;&lt;p&gt;这是一个本人作为练习React Native的第一个项目,干货集中营,入门15天的第一个项目,开发时间:1个月&lt;/p&gt;
    
    </summary>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative官方bug-&gt;onEndReached被多次回调在ios上</title>
    <link href="https://peng8350.github.io/2018/04/11/RN-problem5/"/>
    <id>https://peng8350.github.io/2018/04/11/RN-problem5/</id>
    <published>2018-04-11T12:11:24.000Z</published>
    <updated>2018-04-11T13:55:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="onEndReached多次频繁调用bug"><a href="#onEndReached多次频繁调用bug" class="headerlink" title="onEndReached多次频繁调用bug"></a>onEndReached多次频繁调用bug</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>首先呢,这个bug经过我大量的网上查阅,并不是因为我自己的代码问题所造成的多次回调的bug。<br>而且经测试,Android平台上不存在这个多次回调的问题,只有ios。<br><a id="more"></a></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>如果只在ios上发生这问题的话,我怀疑90%是因为ios弹性listview对高度的错误判断引起多次回调。</p><h2 id="尝试的解决方法"><a href="#尝试的解决方法" class="headerlink" title="尝试的解决方法:"></a>尝试的解决方法:</h2><p></p><p>1.有个人说把header:’100%’?,然而并没卵用</p><p>2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">  &lt;FlatList</div><div class="line">         data=&#123;this.props.data&#125;</div><div class="line">         onEndReached=&#123;...&#125;</div><div class="line">         onEndReachedThreshold=&#123;0.5&#125;</div><div class="line">         ...</div><div class="line">         onMomentumScrollBegin=&#123;() =&gt; &#123; this.onEndReachedCalledDuringMomentum = false; &#125;&#125;</div><div class="line">       /&gt;</div><div class="line">....</div><div class="line"></div><div class="line">   </div><div class="line">     onEndReached = () =&gt; &#123;</div><div class="line">   if (!this.onEndReachedCalledDuringMomentum) &#123;</div><div class="line">     this.props.fetchData();</div><div class="line">     this.onEndReachedCalledDuringMomentum = true;</div><div class="line">   &#125;</div><div class="line"> &#125;;</div></pre></td></tr></table></figure><p></p><p>3.这个是我自己想出来的办法,就是定义一个flag,一旦onEndReached被毁掉然后判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">if(!this.flag)&#123;</div><div class="line">this.flag = true;</div><div class="line">this.props._onLoadMore(() =&gt; &#123;</div><div class="line">    this.flag = false</div><div class="line">&#125;</div><div class="line">)</div><div class="line">&#125;</div><div class="line"></div><div class="line">...</div><div class="line">//After the state callback</div><div class="line">this.setState(&#123;</div><div class="line">...</div><div class="line">&#125;,() =&gt; &#123;</div><div class="line">   this.flag = false;</div><div class="line">&#125;</div><div class="line">)</div></pre></td></tr></table></figure><p></p><p>之前我犯了一个错误,没有考虑到setState是一个异步函数回调,所以我在post获取到数据的同时,直接把flag更新了,这样会导致还没把数据加载到flatlist,再次拖动就会再次回调onEndReached,所以唯有再setState调用完以后,再把flag设置回原来的,就解决这种bug了</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>这个bug是上一年就有的了,现在最新版本也没有修复这个问题,至于为啥不修复,要问FB官方!</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;onEndReached多次频繁调用bug&quot;&gt;&lt;a href=&quot;#onEndReached多次频繁调用bug&quot; class=&quot;headerlink&quot; title=&quot;onEndReached多次频繁调用bug&quot;&gt;&lt;/a&gt;onEndReached多次频繁调用bug&lt;/h1&gt;&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;首先呢,这个bug经过我大量的网上查阅,并不是因为我自己的代码问题所造成的多次回调的bug。&lt;br&gt;而且经测试,Android平台上不存在这个多次回调的问题,只有ios。&lt;br&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative入坑记-调试奇葩错误集合</title>
    <link href="https://peng8350.github.io/2018/03/25/RN-problem4/"/>
    <id>https://peng8350.github.io/2018/03/25/RN-problem4/</id>
    <published>2018-03-25T15:11:24.000Z</published>
    <updated>2018-03-27T13:58:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="调试运行错误集合"><a href="#调试运行错误集合" class="headerlink" title="调试运行错误集合"></a>调试运行错误集合</h1><h2 id="错误一"><a href="#错误一" class="headerlink" title="错误一"></a>错误一</h2><a id="more"></a><p><img src="/images/爬坑/图3.png" alt="错误一"></p><p></p><p>如图,貌似是想表达因为什么原因不能把一个View添加进入结点,我英文很差的别吐槽。这个错误很奇怪,确实很奇怪,为什么呢?因为我IOS里跑的话，完全没有这个问题的,而Android就出现了这个问题。</p><p></p><p>我找了半天代码都没发现什么问题,经过大量google和stackoverflow,搜索到的信息里面很多人都说因为return 里面有注释语句的原因,导致你出现这个调试错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">render() &#123;</div><div class="line"></div><div class="line">  return (</div><div class="line">    &lt;View style=&#123;styles.container&#125;&gt;</div><div class="line">      &lt;TabBar navigation=&#123;this.props.navigation&#125;/&gt;&gt;</div><div class="line">    &lt;/View&gt;</div><div class="line">  );</div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>经过本人的大量仔细调查,我并没有在render方法里写注释,不过唯一让我起疑的就是我昨天刚刚封装的组件里出了问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">render() &#123;</div><div class="line"> </div><div class="line">   return (</div><div class="line"></div><div class="line">       &lt;TabBar navigation=&#123;this.props.navigation&#125;/&gt;&gt;</div><div class="line"> </div><div class="line">   );</div><div class="line">   </div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>果然不出我所料,尝试把View根节点删去就没事了,虽然解决了这个问题,但是还是很疑惑,为什么不能让我在外面多添加一个View呢?是它内部人员写的BUG还是固定为了性能让我们去掉多余的View?这个问题有待以后探讨…</p><h2 id="错误二"><a href="#错误二" class="headerlink" title="错误二"></a>错误二</h2><p></p><p>在ios上尝试调用fetch Api都会报 type Error:Network Request Failed,而在Android平台上没有这个问题.估计这个问题是fb官方的一个bug</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p> <img src="/images/爬坑/图4.png" alt="错误一"></p><ul><li>在Info.plist中添加 NSAppTransportSecurity 类型 Dictionary ; </li><li>在 NSAppTransportSecurity 下添加 NSAllowsArbitraryLoads 类型Boolean ,值设为 YES;</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;调试运行错误集合&quot;&gt;&lt;a href=&quot;#调试运行错误集合&quot; class=&quot;headerlink&quot; title=&quot;调试运行错误集合&quot;&gt;&lt;/a&gt;调试运行错误集合&lt;/h1&gt;&lt;h2 id=&quot;错误一&quot;&gt;&lt;a href=&quot;#错误一&quot; class=&quot;headerlink&quot; title=&quot;错误一&quot;&gt;&lt;/a&gt;错误一&lt;/h2&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative入坑记-初始化项目遇到的错误</title>
    <link href="https://peng8350.github.io/2018/03/22/RN-problem3/"/>
    <id>https://peng8350.github.io/2018/03/22/RN-problem3/</id>
    <published>2018-03-22T15:28:33.000Z</published>
    <updated>2018-03-22T16:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h1> <a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">error An unexpected error occurred: &quot;/Users/xxxx/Library/Caches/Yarn/v1/npm-strip-ansi-4.0.0-</div><div class="line">a8479022eb1ac368a871389b635262c505ee368f/.yarn-metadata.json: Unexpected end of JSON input&quot;.</div><div class="line"></div><div class="line">Error: Command failed: yarn add react-native --exact</div><div class="line">    at checkExecSyncError (child_process.js:575:11)</div><div class="line">    at execSync (child_process.js:612:13)</div><div class="line">    at run (/usr/local/lib/node_modules/react-native-cli/index.js:294:5)</div><div class="line">    at createProject (/usr/local/lib/node_modules/react-native-cli/index.js:249:3)</div><div class="line">    at /usr/local/lib/node_modules/react-native-cli/index.js:217:7</div><div class="line">    at /usr/local/lib/node_modules/react-native-cli/node_modules/prompt/lib/prompt.js:316:32</div><div class="line">    at /usr/local/lib/node_modules/react-native-cli/node_modules/async/lib/async.js:142:25</div><div class="line">    at assembler (/usr/local/lib/node_modules/react-native-cli/node_modules/prompt/lib/prompt.js:313:9)</div><div class="line">    at /usr/local/lib/node_modules/react-native-cli/node_modules/prompt/lib/prompt.js:322:32</div><div class="line">    at /usr/local/lib/node_modules/react-native-cli/node_modules/prompt/lib/prompt.js:597:5</div><div class="line">  status: 1,</div><div class="line">  signal: null,</div><div class="line">  output: [ null, null, null ],</div><div class="line">  pid: 1380,</div><div class="line">  stdout: null,</div><div class="line">  stderr: null &#125;</div><div class="line">Command `yarn add react-native --exact` failed.</div></pre></td></tr></table></figure><p></p><p>如上是我执行react-native init 时遇到的一个错误,之前是没有问题的,不知道为啥突然之间不行了- -!</p><h3 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm config set registry https://registry.npm.taobao.org</div><div class="line">npm config set disturl https://npm.taobao.org/dist</div></pre></td></tr></table></figure><p>这个解决方法事实上对我一点作用也没有,不过绝大数人说的就是这个解决方法,不过就是对我这情况无效呗</p><h3 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf /usr/local/bin/yarn</div></pre></td></tr></table></figure><p>这个方法就成功了</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题一&quot;&gt;&lt;a href=&quot;#问题一&quot; class=&quot;headerlink&quot; title=&quot;问题一&quot;&gt;&lt;/a&gt;问题一&lt;/h1&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative入坑记-this指针理解</title>
    <link href="https://peng8350.github.io/2018/03/20/RN-problem2/"/>
    <id>https://peng8350.github.io/2018/03/20/RN-problem2/</id>
    <published>2018-03-20T12:17:03.000Z</published>
    <updated>2018-04-23T10:17:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h1><p> </p><p>刚入门ReactNative半个月,在前期学习的过程中,总是对这个this指针的概念不是很清晰和理解,每次调用这个this也要想一想它到底是指向谁?所以,很有必要仔细研究这个this指向。</p><a id="more"></a><h2 id="What-is-“this”"><a href="#What-is-“this”" class="headerlink" title="What is “this”?"></a>What is “this”?</h2><p> </p><p>众所周知,在Java面向对象语言里,它就是指向当前类的对象,Object-C,C++和JAVA都是指向当前的类对象,但是Javascript里面的this指针和其他语言的this不是一个概念。简单一句话来说,JavaScript里面的this就是指向调用它的那个对象,或许这么一说,你还是有点模糊。不过往下看!</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"> constructor()&#123;</div><div class="line">       super()</div><div class="line"></div><div class="line">       this.state = &#123;</div><div class="line">    </div><div class="line">           aaa: &apos;we&apos;</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">ButtonClick()&#123;</div><div class="line">this.setState(&#123;...&#125;)</div><div class="line">//alert(this.state.visiable)</div><div class="line">&#125;</div><div class="line"></div><div class="line">render()&#123;</div><div class="line">return(</div><div class="line">&lt;View&gt;....</div><div class="line">&lt;Button onPress=&#123;this.ButtonClick&#125; title=&#123;....&#125;/&gt;</div><div class="line">&lt;/View&gt;</div><div class="line">)</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>比如,我想实现一个功能,就是点击按钮隐藏某个组件,试图去利用回调函数来改变当前组件的state,最后报错,”setState is not a function”,大概就是说没有这个方法的意思吧,也尝试alert输出sate,也是报错underfined。当时,对this不理解所犯下的一个错误,原因很简单,因为this压根就不是指向当前类对象。</p><h3 id="例子二"><a href="#例子二" class="headerlink" title="例子二"></a>例子二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//类一</div><div class="line">class Person1&#123;</div><div class="line">    constructor()&#123;</div><div class="line">        this.age = 18</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printAge()&#123;</div><div class="line">        alert(this.age)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//类二</div><div class="line">class Person2&#123;</div><div class="line">    constructor()&#123;</div><div class="line">        this.age = 15</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printAge()&#123;</div><div class="line">        alert(this.age)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">let p1 = new Person1()</div><div class="line">      let p2 = new Person2()</div><div class="line">      p1.printAge()//输出18</div><div class="line">      var method = p1.printAge</div><div class="line">      method.call(p2)//输出15</div></pre></td></tr></table></figure><p></p><p>如上,这里我有两个类,里面都有一个共同属性age,当他们作为构造函数使用new关键字时,默认指向当前类对象。p1.printAge()利用p1来调用printAge方法输出18,看得出来this指向的就是p1,但通过引用p1的printAge方法来交给p2这个对象调用的时候,输出就是p2里面的age里的值,证明this指针指向的就是调用它的那个对象,p1调用了它,就是指p1,p2调用了它,就是p2</p><h2 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h2><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>() =&gt; {},使用这种箭头函数时,this指针和普通函数this指针的指向不同,在箭头函数里,this是和其他面向对象语言的this指向一样,都是指向当前类的对象,不会因为调用对象而改变指向。</p><h3 id="call和apply"><a href="#call和apply" class="headerlink" title="call和apply"></a>call和apply</h3><p>上面已经演示了call改变this的作用,所以这两个方法可以改变调用这个方法的对象,也就是说会改变方法里的this</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p> 如果在一个函数前面加上new关键字来调用，那么就会创建一个连接到该函数的prototype成员的新对象，同时，this会被绑定到这个新对象上。这种情况下，这个函数就可以成为此对象的构造函数。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function obj()&#123;  </div><div class="line">  this.name = &quot;obj&quot;;  </div><div class="line">&#125;  </div><div class="line">var o = new obj();  </div><div class="line">alert(o.name); //&quot;obj&quot;</div></pre></td></tr></table></figure><p>使用new创建对象o时，在构造函数中this指向了o，因此o的name属性被赋值为“obj”。</p><h1 id="总结完毕"><a href="#总结完毕" class="headerlink" title="总结完毕!"></a>总结完毕!</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;this指针&quot;&gt;&lt;a href=&quot;#this指针&quot; class=&quot;headerlink&quot; title=&quot;this指针&quot;&gt;&lt;/a&gt;this指针&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;刚入门ReactNative半个月,在前期学习的过程中,总是对这个this指针的概念不是很清晰和理解,每次调用这个this也要想一想它到底是指向谁?所以,很有必要仔细研究这个this指向。&lt;/p&gt;
    
    </summary>
    
      <category term="分析" scheme="https://peng8350.github.io/categories/%E5%88%86%E6%9E%90/"/>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative入坑记-No Bundle Url Present</title>
    <link href="https://peng8350.github.io/2018/03/14/RN-problem1/"/>
    <id>https://peng8350.github.io/2018/03/14/RN-problem1/</id>
    <published>2018-03-14T07:23:43.000Z</published>
    <updated>2018-03-20T14:14:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h1><p>当我有时想要重新打包运行IOS的时候,偶尔会出现这个坑爹的问题<br><a id="more"></a></p><p></p><p><img src="/images/爬坑/图1.png" alt=""></p><p></p><p>如图,上面这个奇葩错误在我入门搭建环境的时候就碰到了,那时我的解决方案:</p><ul><li>重新启动电脑</li><li>关闭模拟器,关闭所有终端,重新react-native run-ios</li></ul><p></p><p>而今天连续好几次react-native run-ios都出现这个问题,因为我为了调试fetch 那个API在IOS的异常,尝试多次修改info.plist并重新打包无果！实在不能忍,放掉当前问题,去百度stackoverflow解决这个问题先。</p><p></p><p>经过一番的网上找答案,绝大多人都是给出这个解决方案:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm install</div><div class="line"></div><div class="line">react-native run-ios</div></pre></td></tr></table></figure><p></p><p>然而,This is Nothing to do with it。(无果)</p><p></p><p>最后,偶尔找到一个博客是说<b><font color="red">shadowsocks</font></b>的问题,确实!这个才是真正的答案,虽然不知道为什么<b><font color="red">shadowsocks</font></b>翻墙会阻碍IOS重新生成。但关闭<b><font color="red">shadowsocks</font></b>的代理之后,重新react-native run-ios却解决了这个问题</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p><img src="/images/爬坑/图2.png" alt=""></p><ul><li>关闭<b><font color="red">shadowsocks</font></b>代理</li><li>切换全局模式为代理模式</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><img src="http://blog.csdn.net/suyie007/article/details/70768410" alt="http://blog.csdn.net/suyie007/article/details/70768410"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;起源&quot;&gt;&lt;a href=&quot;#起源&quot; class=&quot;headerlink&quot; title=&quot;起源&quot;&gt;&lt;/a&gt;起源&lt;/h1&gt;&lt;p&gt;当我有时想要重新打包运行IOS的时候,偶尔会出现这个坑爹的问题&lt;br&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="ReactNative" scheme="https://peng8350.github.io/tags/ReactNative/"/>
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>MBR+Clover黑苹果安装教程</title>
    <link href="https://peng8350.github.io/2018/03/11/MBR+Clover%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://peng8350.github.io/2018/03/11/MBR+Clover黑苹果安装教程/</id>
    <published>2018-03-11T13:00:43.000Z</published>
    <updated>2018-03-11T14:50:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>  这几天为了研究Reaect-native,看不到在IOS上的调试,实在不爽,所以选择安装回以前的苹果系统,本教程使用MBR分区+Clover的方式安装黑苹果,实现与WIN7双系统。基本上95%完美,除了睡眠和外接显示器有一点小问题</p>  <a id="more"></a><h2 id="驱动安装情况"><a href="#驱动安装情况" class="headerlink" title="驱动安装情况"></a>驱动安装情况</h2><h3 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h3><p>使用RehabMan提供fakepciid假冒显卡驱动,水波纹透明,动画流畅,基本完美,dsdt注入实现亮度调节,可以HDMI外接显示器输出</p><h3 id="声卡"><a href="#声卡" class="headerlink" title="声卡"></a>声卡</h3><p>仿冒283驱动,没有爆音等奇怪现象,电脑连接耳机有声音</p><h3 id="有线网卡"><a href="#有线网卡" class="headerlink" title="有线网卡"></a>有线网卡</h3><p>系统显示已经加载了这个驱动了,因现在不用有线接网,所以没测试过,过去使用也是没有问题的,不知道在这个版本OS行不行,应该没什么问题</p><h3 id="无线网卡"><a href="#无线网卡" class="headerlink" title="无线网卡"></a>无线网卡</h3><p>在过去2年,一直以为ar9565这个无线无解,没想到竟然有人破解了这个网卡驱动,亲测试,没有问题,状态栏有图标,搜索到信号</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>摄像头已驱动,USB3.0可用,外接显示器VDI转HDMI可以使用</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境:"></a>安装环境:</h2><p>WIN7<br><br>Acer E5 572G 52DX<br><br>MAC OS X 10.12.6</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>显卡:HD4600</li><li>声卡:ALC283</li><li>无线:AR9565</li><li>有线:RT81111</li></ul><h2 id="使用到的工具"><a href="#使用到的工具" class="headerlink" title="使用到的工具:"></a>使用到的工具:</h2><h3 id="8GU盘"><a href="#8GU盘" class="headerlink" title="8GU盘"></a>8GU盘</h3><p>作用不多说</p><h3 id="MacDrive8-需破解"><a href="#MacDrive8-需破解" class="headerlink" title="MacDrive8(需破解)"></a>MacDrive8(需破解)</h3><p>该工具的作用就是让MAC光驱可以被看到,如果没有这个工具,你安装好镜像或者装好MAC系统后会看不到光盘</p><h3 id="Transmac"><a href="#Transmac" class="headerlink" title="Transmac"></a>Transmac</h3><p>用于安装mac懒人版镜像(也就是安装盘)到U盘</p><h3 id="7-zip"><a href="#7-zip" class="headerlink" title="7-zip"></a>7-zip</h3><p>用于解压Clover bootloader</p><h3 id="CloverISO-4392-bootloader"><a href="#CloverISO-4392-bootloader" class="headerlink" title="CloverISO-4392 bootloader"></a>CloverISO-4392 bootloader</h3><p><a href="https://sourceforge.net/projects/cloverefiboot/files/Bootable_ISO/" target="_blank" rel="noopener">链接</a>,版本最好用这个,因为我实际测试的时候不同版本还是有很大区别的,会造成无法进入clover引导界面</p><h3 id="EasyBcd"><a href="#EasyBcd" class="headerlink" title="EasyBcd"></a>EasyBcd</h3><p>用于安装CloverISO-4392镜像到引导选项</p><h3 id="Kext-wizard"><a href="#Kext-wizard" class="headerlink" title="Kext wizard"></a>Kext wizard</h3><p>MAC下的工具,这个用来安装驱动到s/l/e,并且可以修复缓存</p><h3 id="黑苹果懒人版镜像-CDR"><a href="#黑苹果懒人版镜像-CDR" class="headerlink" title="黑苹果懒人版镜像(CDR)"></a>黑苹果懒人版镜像(CDR)</h3><p>这个是肯定要的,没有安装盘那又如何安装黑苹果呢,是吧。不过选择懒人版的时候,看清楚它的要求,比如有一些它不适用Clover或者用于变色龙引导的,或者只用于GPT。我有一次掉坑就是选错了,造成无法安装的问题。这里,我推荐这个. 链接: <a href="https://pan.baidu.com/s/1gflA8iJ" target="_blank" rel="noopener">https://pan.baidu.com/s/1gflA8iJ</a> 密码: 6u7e</p><h3 id="Ext2Fsd-可选"><a href="#Ext2Fsd-可选" class="headerlink" title="Ext2Fsd(可选)"></a>Ext2Fsd(可选)</h3><p>这个工具作用和上面差不多,也是要查看分区,不过这个通过改盘符来查看分区</p><h3 id="Clover-Configurer-可选"><a href="#Clover-Configurer-可选" class="headerlink" title="Clover Configurer(可选)"></a>Clover Configurer(可选)</h3><p>Mac的工具,用来配置config.plist,快捷</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="将懒人版镜像安装到你的U盘"><a href="#将懒人版镜像安装到你的U盘" class="headerlink" title="将懒人版镜像安装到你的U盘"></a>将懒人版镜像安装到你的U盘</h2><p>对于U盘的要求,只要你的U盘有8G大的就可以了,因为CDR本来就6G,安装上去也就6G左右<br><img src="/images/mac安装教程/图1.png" alt="1.ng"><br><br>安装到U盘,要使用到这个工具叫transmac,如上图,我有三个盘,第一个是我的本来笔记本硬盘,第二个是我的SSD,第三个就是我的u盘。右击第三个,选择Restore with Disk Image。<br>然后弹出对话框，选择你刚刚安装好的懒人版镜像(CDR,安装盘镜像),然后就开始安装到你的u盘了,这个时间很长,你要等待20-40分钟左右,就看U盘的读写速度了,这个时候可以去喝杯茶。</p><h2 id="新建一个卷"><a href="#新建一个卷" class="headerlink" title="新建一个卷"></a>新建一个卷</h2><p>这个卷的作用就是真正放Mac系统的盘,过程不多说,就是右击我的电脑,然后点击管理,选择你有多余空间的盘,然后新建,注意新建的时候,要选不要格式化光驱,不要格式化光驱,不要格式化光驱,新建好的盘就是你要待会安装MAC系统进去的盘(Mac盘只有一个)</p><h2 id="设置待安装Mac格式"><a href="#设置待安装Mac格式" class="headerlink" title="设置待安装Mac格式"></a>设置待安装Mac格式</h2><p>通过Win+R cmd,然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">diskpart</div><div class="line">//这里要变化,下面意思选择磁盘1(下标从0开始),因为我的SSD位于第二,</div><div class="line">//如果你想知道你的要安装的磁盘在哪里，你可以输入list disk命令</div><div class="line">sel disk 1</div><div class="line">//我的光区在第二个位置</div><div class="line">sel par 1</div><div class="line">//重点下面这句,意思把格式改为af</div><div class="line">set id=AF</div></pre></td></tr></table></figure><h2 id="为安装盘-U盘-添加EFI-删除一些阻碍驱动"><a href="#为安装盘-U盘-添加EFI-删除一些阻碍驱动" class="headerlink" title="为安装盘(U盘)添加EFI,删除一些阻碍驱动"></a>为安装盘(U盘)添加EFI,删除一些阻碍驱动</h2><p></p><p>至于EFI的选择,要根据你的机型实际的情况,每个人的EFI里面的内容会不同,主要的文件有:EFI/CLOVER/config.plist和EFI/CLOVER/kexts,/EFI/CLOVER/ACPI/patched,第一个就是你的clover配置文件,第二个就是放置要加载的驱动,第三个就是DSDT实现一些特别的功能.这个会影响到你进入安装界面是否会五国,可以参考我的EFI,<a href="https://github.com/peng8350/E5-572G-EFI" target="_blank" rel="noopener">地址</a></p><p></p><p>第二,删除S/L/E(System/Library/Extensions)不是必须的,但也是必要的当你出现五国(无法进入安装界面)的时候,至于删除什么驱动,这个不是确定的,因为机型不同,要看实际情况,容易造成五国无法进入安装界面的驱动有:NV开头(Nvdia驱动),AppleIntelCpu两个kexts,iobluotooth两个(蓝牙)。</p><h2 id="用easybcd添加CloverISO-4392-bootloader-iso"><a href="#用easybcd添加CloverISO-4392-bootloader-iso" class="headerlink" title="用easybcd添加CloverISO-4392 bootloader.iso"></a>用easybcd添加CloverISO-4392 bootloader.iso</h2><p>添加镜像引导进去clover引导,easybcd添加clover引导镜像过程省略(没截图…)。装好后，可以重启进入选项引导了,选择你刚刚添加的引导选项,不出意外的话就可以进去<br><img src="/images/mac安装教程/图2.jpg" alt="2.png"><br>上图,进去选好你的安装盘按空格,会出现这个,然后boot with injected kexts还有Verbose(-v,就是调试嘛,看日志),别选without,因为要加载kexts里面的fakesmc,没有这个是没办法进入的。<br><img src="/images/mac安装教程/图3.jpg" alt="3.ng"><br>会刷一大堆日志出现，这里你要最注意的是waiting for dsmos…还有dsmos has arrived这两句话很重要,如果dsmos has arrivedz这句话没出来,原因大概是这两个:</p><ul><li>如上面我所说,s/l/e一些驱动干扰</li><li>没有成功加载fakesmc.kext,如果确定加载了，你可以试下换最新版的fakesmc</li></ul><h3 id="现象二"><a href="#现象二" class="headerlink" title="现象二"></a>现象二</h3><p>出现system uploadtime…的字样</p><ul><li>一般就是你的电源驱动问题,没有驱动那个nullpowermanagement.kext，或者没有删除S/L/E下的两个电源管理驱动</li><li>把USB 3.0的位置换到2.0位置试试</li></ul><h3 id="现象三"><a href="#现象三" class="headerlink" title="现象三"></a>现象三</h3><p>刷完一堆代码后立马电脑自动重启,原因就是内核问题,像我这笔记本出现过这个问题很多次,变色龙引导也有这问题,最后打了haswell内核补丁,在clover里config.plist设置一个参数为true就可以解决了,-xcpm为true好像是这个。</p><h2 id="进入界面开始安装"><a href="#进入界面开始安装" class="headerlink" title="进入界面开始安装"></a>进入界面开始安装</h2><p><img src="/images/mac安装教程/图4.jpg" alt="4.png"><br>第一步,就是打开磁盘工具(左上角,慢慢找),对你刚刚新建并且改ID的盘进行摸盘操作,这里要选择MAC的格式要选择Mac分区(日志),但我这里显示英文字样的。然后可以开始安装了，等待安装完毕，重启</p><h2 id="重启进入WIN7复制EFI-可以是安装EFI或者是你别人弄好的EFI-到MAC盘"><a href="#重启进入WIN7复制EFI-可以是安装EFI或者是你别人弄好的EFI-到MAC盘" class="headerlink" title="重启进入WIN7复制EFI(可以是安装EFI或者是你别人弄好的EFI)到MAC盘"></a>重启进入WIN7复制EFI(可以是安装EFI或者是你别人弄好的EFI)到MAC盘</h2><p>因为你要依赖FAKESMC这个驱动才能进入系统的,这个过程不可少,复制完后,确保config.plist参数适合你的机子,fakeSMC.kext一定要存在</p><h2 id="重启进入clover引导"><a href="#重启进入clover引导" class="headerlink" title="重启进入clover引导"></a>重启进入clover引导</h2><p>这里也不要忘了boot with injected kext,能进去的话,把你自己准备好的驱动放到S/L/E然后修复权限和缓存,这里就靠你自己驱动了,可以到远景论坛(收费注册)或者自己百度找驱动吧..</p><h1 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h1><ul><li>外界显示器突然间花屏,好像是电脑几分钟不动会有概率产生这情况,或者是我自己的外界显示器本身问题吧,目前原因不明</li><li>睡眠问题,可以实现睡眠,但是一旦睡眠时间长了,再次开机的时候无法唤醒一直黑屏</li></ul><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾!"></a>结尾!</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;  这几天为了研究Reaect-native,看不到在IOS上的调试,实在不爽,所以选择安装回以前的苹果系统,本教程使用MBR分区+Clover的方式安装黑苹果,实现与WIN7双系统。基本上95%完美,除了睡眠和外接显示器有一点小问题&lt;/p&gt;
    
    </summary>
    
      <category term="黑果" scheme="https://peng8350.github.io/categories/%E9%BB%91%E6%9E%9C/"/>
    
    
      <category term="Mac OS" scheme="https://peng8350.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu系统下搭建SS或者SSR翻墙教程</title>
    <link href="https://peng8350.github.io/2017/10/13/buildss/"/>
    <id>https://peng8350.github.io/2017/10/13/buildss/</id>
    <published>2017-10-13T11:58:10.000Z</published>
    <updated>2018-03-10T08:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文采用Chrome+switchyomega+shadowsocks实现翻墙。</p><p>工具: Chrome+Shadowsocks<br><a id="more"></a></p><h2 id="Shadowsocks-qt5"><a href="#Shadowsocks-qt5" class="headerlink" title="Shadowsocks-qt5"></a>Shadowsocks-qt5</h2><h3 id="First-one"><a href="#First-one" class="headerlink" title="First one"></a>First one</h3><p>通过命令行直接安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo add-apt-repository ppa:hzwhuang/ss-qt5</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install shadowsocks-qt5</div></pre></td></tr></table></figure><h3 id="First-two"><a href="#First-two" class="headerlink" title="First two"></a>First two</h3><p>通过上面的步骤,shadowsocks已经安装好了<br>接下来打开shadowsocks,点连接-&gt;新建-&gt;手动,这里我就不截图了,因为工具本身很难支持<br><img src="/images/buildss-p1.png" alt="p1"></p><p></p><p>如上,服务器地址就是填SS服务器的IP地址,密钥就是它提供的密码,端口就不解析!本地地址一般指向本机,本地端口随意,但是待会要用到的,加密一般都是AES-256-CFB，选HTTPS不选socks5。确定。</p><h3 id="First-three"><a href="#First-three" class="headerlink" title="First three"></a>First three</h3><p></p><p>然后,百度找一个叫switchyomega的插件<br><img src="/images/buildss-p2.png" alt="p2"><br>如图,上面的地址和端口都是对应我们刚才填写的本地地址和本地端口!!<br><img src="/images/buildss-p3.png" alt="p3"><br>选择代理,这样几乎好了,然后你打开google.com应该没问题,假如不行,看一下代理可不可以用,测试方法是点击测试延迟,看一下有没有网速!</p><h2 id="ShadowsocksR"><a href="#ShadowsocksR" class="headerlink" title="ShadowsocksR"></a>ShadowsocksR</h2><p>同样的这种方法,SSR也是和Shadowsocks差不多<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget http://www.djangoz.com/linux_setup_ssr/ssr</div><div class="line">sudo mv ssr /usr/local/bin</div><div class="line">sudo chmod 766 /usr/local/bin/ssr</div><div class="line">ssr install</div><div class="line">ssr config</div></pre></td></tr></table></figure></p><p>ssr config输入完后,这里有一大堆东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"></div><div class="line">    &quot;server&quot;: &quot;108.61.119.120&quot;,</div><div class="line">    &quot;server_ipv6&quot;: &quot;::&quot;,</div><div class="line">    &quot;server_port&quot;: 3612,</div><div class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class="line">    &quot;local_port&quot;: 1080,</div><div class="line"></div><div class="line">    &quot;password&quot;: &quot;ntdtv.com&quot;,</div><div class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;,</div><div class="line">    &quot;protocol&quot;: &quot;auth_sha1_v4&quot;,</div><div class="line">    &quot;protocol_param&quot;: &quot;&quot;,</div><div class="line">    &quot;obfs&quot;: &quot;tls1.2_ticket_auth&quot;,</div><div class="line">    &quot;obfs_param&quot;: &quot;&quot;,</div><div class="line">    &quot;speed_limit_per_con&quot;: 0,</div><div class="line">    &quot;speed_limit_per_user&quot;: 0,</div><div class="line"></div><div class="line">    &quot;additional_ports&quot; : &#123;&#125;, // only works under multi-user mode</div><div class="line">    &quot;additional_ports_only&quot; : false, // only works under multi-user mode</div><div class="line">    &quot;timeout&quot;: 120,</div><div class="line">    &quot;udp_timeout&quot;: 60,</div><div class="line">    &quot;dns_ipv6&quot;: false,</div><div class="line">    &quot;connect_verbose_info&quot;: 0,</div><div class="line">    &quot;redirect&quot;: &quot;&quot;,</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p></p><p> 这些都不用我说了吧,我们要注意的是protocol还有obfs这两个键字,这两个东西代表SSR的协议和混淆,通常情况下都要修改一下的,其他参数看你自己实际情况更改!接着,和上面第三个步骤需要switchyomega这个插件,不过这里区别最大的是,一定要用SOCKS代理,不用HTTP代理,因为SSR默认的本地服务器类型就是SOCKS5!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文采用Chrome+switchyomega+shadowsocks实现翻墙。&lt;/p&gt;
&lt;p&gt;工具: Chrome+Shadowsocks&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://peng8350.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Ubuntu" scheme="https://peng8350.github.io/tags/Ubuntu/"/>
    
      <category term="翻墙" scheme="https://peng8350.github.io/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>分享SS代理地址</title>
    <link href="https://peng8350.github.io/2017/10/13/sharess/"/>
    <id>https://peng8350.github.io/2017/10/13/sharess/</id>
    <published>2017-10-13T11:51:47.000Z</published>
    <updated>2018-03-10T08:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更新时间-2017年10月22日"><a href="#更新时间-2017年10月22日" class="headerlink" title="更新时间:2017年10月22日"></a>更新时间:2017年10月22日</h1><h2 id="分享来自本人搜集到的ss网站"><a href="#分享来自本人搜集到的ss网站" class="headerlink" title="分享来自本人搜集到的ss网站:"></a>分享来自本人搜集到的ss网站:</h2><a id="more"></a><p><a href="https://hspess.com" target="_blank" rel="noopener">https://hspess.com/</a>(貌似暂停)<br><a href="https://github.com/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7" target="_blank" rel="noopener">new_pac</a>(可用)</p><p></p><p>如果还不会翻墙,请看我这个<a href="/2017/10/13/buildss/">教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;更新时间-2017年10月22日&quot;&gt;&lt;a href=&quot;#更新时间-2017年10月22日&quot; class=&quot;headerlink&quot; title=&quot;更新时间:2017年10月22日&quot;&gt;&lt;/a&gt;更新时间:2017年10月22日&lt;/h1&gt;&lt;h2 id=&quot;分享来自本人搜集到的ss网站&quot;&gt;&lt;a href=&quot;#分享来自本人搜集到的ss网站&quot; class=&quot;headerlink&quot; title=&quot;分享来自本人搜集到的ss网站:&quot;&gt;&lt;/a&gt;分享来自本人搜集到的ss网站:&lt;/h2&gt;
    
    </summary>
    
      <category term="福利" scheme="https://peng8350.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
      <category term="翻墙" scheme="https://peng8350.github.io/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu(Linux)系统中搭建Android开发环境遇到的问题收集</title>
    <link href="https://peng8350.github.io/2017/10/11/ubuntu-IJ/"/>
    <id>https://peng8350.github.io/2017/10/11/ubuntu-IJ/</id>
    <published>2017-10-11T14:43:43.000Z</published>
    <updated>2018-03-10T08:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>首先,本人是经常使用Ubuntu系统,毕竟写Android的绝对都是用这个系统写代码的,也不可避免偶尔重装系统,每次都要重新布置环境,所以有必要收集一下这些问题,以免我下次重装好解决这些问题,同时也有利于很多的Android开发者也遭遇同样的问题。</p><p></p><p>我的linux系统版本是Ubuntu 16.04,然后使用到InllijIdea这个智能IDE,模拟器用到genymotion+VirtualBox。genymotion版本是2.4搭配apt-get那个virtualbox版本。<br><a id="more"></a></p><h1 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h1><p>当我把程序build完后出现了下面的错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error: Gradle: Execution failed for task ‘:mytask’ &gt; A problem occurred starting process &apos;command &apos;/Android/Sdk/build-tools/23.0.1/aapt&apos;&apos;</div></pre></td></tr></table></figure></p><p>它大概意思是说运行aapt的时候出现了一些问题,原因是aapt不能运行在linux 64位系统下,所以才出现这个问题。<br><br>解决方法如下(终端输入):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo -s(输入你的密码)</div><div class="line">apt-get install lib32stdc++6</div><div class="line">apt-get install lib32z1</div></pre></td></tr></table></figure></p><h1 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h1><p>  genymotion2.4打开遇到的坑,其他版本可能没有这个问题,但是我每次首次打开genymotion都会遇到这个问题,我在打开目录后,然后./genymotion,弹出下面错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">genymotion: error while loading shared libraries: libgstapp-0.10.so.0:</div><div class="line">cannot open shared object file: No such file or directory</div></pre></td></tr></table></figure></p><p>这个问题相对的比较简单,就是说我缺少某一些操作库<br><br>解决如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libgstreamer0.10-dev   </div><div class="line">sudo apt-get install libgstreamer-plugins-base0.10-dev</div></pre></td></tr></table></figure></p><p>再次./genymotion就解决了!</p><h1 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h1><p><img src="/images/ubuntu-p1.png" alt="genymotion problem"><br>genymotion运行模拟器出现这样的问题,这里我直接到官网下载<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">Virtualbox</a>下载最新版本就解决这个问题了,不过网上很多人说这种解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/vboxdrc setup</div></pre></td></tr></table></figure></p><p>但是我的Ubuntu系统根本就不存在vboxdrc这个文件夹,这样输入就提示找不到命令。</p><h1 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h1><p><img src="/images/ubuntu-p2.jpg" alt="build"><br>IDE一直处于build project状态,首先,你要确认你的网络有没有问题,是不是断网了,如果确定没有,那就请看下面。之所以会卡在这种状态,是因为它要下载gradle版本从一个地址上,但是那个地址需要翻墙,所以IDE一直没办法下载下来就卡了。</p><h3 id="解决办法1"><a href="#解决办法1" class="headerlink" title="解决办法1:"></a>解决办法1:</h3><p>   翻墙你懂的,方式很多,有ss、ssr、vpn,只要能翻墙到外国网站都可以,然后IDE-&gt;settings-&gt;http proxy,设置你的代理,重新打开IDE就能下载了</p><h3 id="解决方法2-推荐"><a href="#解决方法2-推荐" class="headerlink" title="解决方法2:(推荐)"></a>解决方法2:(推荐)</h3><p>   首先,到<a href="https://gradle.org/releases/" target="_blank" rel="noopener">这里</a>下载一个你喜欢的gradle版本<br>   假设我下载好的4.2.1版本放在了 /user/xxxx/下载 这个目录(这里xxxx是用户名)<br>   打开终端如下操作:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /user/xxxx/下载</div><div class="line">mv gradle-4.2.1-all.zip /user/xxxx/.gradle/wrapper/dists/gradle-4.2.1-all/55gk2rcmfc6p2dg9u9ohc3hw9</div></pre></td></tr></table></figure></p><p>注意了,55gk2rcmfc6p2dg9u9ohc3hw9是随机生成的,我和大家的肯定不一样!假如没有gradle-4.2.1-all这个文件夹的话,你需要随便找一个android poj,修改它的gradle版本为4.2.1,然后进去IDE build一会儿,然后就会生成这个文件夹!</p><h1 id="问题5"><a href="#问题5" class="headerlink" title="问题5"></a>问题5</h1><h2 id="症状一"><a href="#症状一" class="headerlink" title="症状一"></a>症状一</h2><p><img src="/images/ubuntu-p3.png" alt="adb"><br>这个问题也是纠结了很久,adb无法使用或者端口5037被占用。网上几乎都是说什么360,豌豆啥占用了端口,把它杀死就OK了,但我这个并不是占用端口造成的！是因为Ubuntu 64位无法兼容32位的adb!解决如下:</p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境:"></a>配置环境:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/profile(在最后追加下面两行)</div><div class="line">export PATH=&quot;$PATH:/home/username/sdk/tools&quot;</div><div class="line">export PATH=&quot;$PATH:/home/username/sdk/paltform-tools&quot;</div><div class="line"></div><div class="line">source /etc/profile</div></pre></td></tr></table></figure><h3 id="安装32位兼容库"><a href="#安装32位兼容库" class="headerlink" title="安装32位兼容库"></a>安装32位兼容库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo dpkg --add-architecture i386</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install libncurses5:i386 libstdc++6:i386 zlib1g:i386</div></pre></td></tr></table></figure><h2 id="症状二"><a href="#症状二" class="headerlink" title="症状二"></a>症状二</h2><p>每次重启都会遇到上面这个问题,又是开启不了adb,这类情况呢,是因为我的genymotion里面设定的adb问题,是因为我adb指向了genymotion里面的adb。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><img src="/images/ubuntu-p5.png" alt="p5"><br>设置genymotion adb 默认是你的adb<br>或许这一步你可以解决这个问题,但是我的话还是没有解决。这里我还遇到了一个坑爹问题,就是我保存后,退出genymotion再次打开genymotion,但是adb仍然默认是genymotion的adb,意思就是我每次设定了一个位置,退出后没有保存设置,这问题实在是genymotion的一个大坑,对linux系统存在bug。我也很无奈,最后我自己是通过复制我本身的adb/tools/platform-tools所有文件覆盖到genymotion/tools文件夹。</p><h1 id="问题6"><a href="#问题6" class="headerlink" title="问题6"></a>问题6</h1><p><img src="/images/ubuntu-p4.png" alt="p6"></p><p></p><p>这种问题是说我工程目录下/.idea/modules/里没有这三个文件,确实我进去我.idea目录看了一下,确实没有modules这个文件夹,顿时我就觉得很奇怪了,modules文件夹不是IDE自动帮我们生成的吗?为什么这次不帮我们自动生成,神奇了,项目是从github clone下来的,但我觉得问题起因不是这个,之前也没事,估计是我系统里面安装了一些不该安装的库吧!!</p><p></p><p>最后我是通过删除了.idea这个文件夹后,重启IDE就自动生成了!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p&gt;首先,本人是经常使用Ubuntu系统,毕竟写Android的绝对都是用这个系统写代码的,也不可避免偶尔重装系统,每次都要重新布置环境,所以有必要收集一下这些问题,以免我下次重装好解决这些问题,同时也有利于很多的Android开发者也遭遇同样的问题。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;我的linux系统版本是Ubuntu 16.04,然后使用到InllijIdea这个智能IDE,模拟器用到genymotion+VirtualBox。genymotion版本是2.4搭配apt-get那个virtualbox版本。&lt;br&gt;
    
    </summary>
    
      <category term="问题收集" scheme="https://peng8350.github.io/categories/%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    
    
      <category term="Linux" scheme="https://peng8350.github.io/tags/Linux/"/>
    
      <category term="Android" scheme="https://peng8350.github.io/tags/Android/"/>
    
      <category term="Java" scheme="https://peng8350.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>首次为开源项目添加Travis Ci的徽章</title>
    <link href="https://peng8350.github.io/2017/09/29/travis-ci/"/>
    <id>https://peng8350.github.io/2017/09/29/travis-ci/</id>
    <published>2017-09-29T08:09:44.000Z</published>
    <updated>2018-03-10T08:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Travis-Ci有什么用"><a href="#Travis-Ci有什么用" class="headerlink" title="Travis Ci有什么用?"></a>Travis Ci有什么用?</h2><p>   我经常一直看到一些很强的开源项目里,都带着build passing这个徽章,至于build passing这个如何获得呢,这就需要Travis Ci这个持续集成的东西。Travios CI即持续集成系统。对个人而言，就是让你的代码在提交到远程——这里是GitHub——后，立即自动编译，并且在失败后可以自动给你发邮件的东西。当然，除了编译，还能做自动化测试、自动部署等。对团队或企业而言，这意味着更多的东西，是敏捷开发的一种践行。<br><a id="more"></a></p><h2 id="注册项目"><a href="#注册项目" class="headerlink" title="注册项目"></a>注册项目</h2><p>   登录 <a href="https://travis-ci.org/" target="_blank" rel="noopener">https://travis-ci.org/</a> 这个网站,首先你必须要有Github帐号,因为待会要获取你的Github里面的项目,点右上角acounnts,然后会要求同步github的项目,接着来到这个界面<br><img src="/images/ci1.png" alt="ci1.ng"><br>   如上图,打开你需要同步的项目,AndroidResideMenu这种状态就处于打开了,你项目每次提交它都会检测了！</p><h2 id="添加-travis-yml"><a href="#添加-travis-yml" class="headerlink" title="添加.travis.yml"></a>添加.travis.yml</h2><p>   在你的项目工程中,新建一个.travis.yml,添加一下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">language: android</div><div class="line">jdk: oraclejdk8</div><div class="line">android:</div><div class="line">  components:</div><div class="line">    - platform-tools</div><div class="line">    - tools</div><div class="line">    - build-tools-23.0.1</div><div class="line">    - android-22</div><div class="line">    - extra-android-support</div><div class="line">    - extra-android-m2repository</div><div class="line"></div><div class="line"></div><div class="line">script:</div><div class="line">    - cd library</div></pre></td></tr></table></figure></p><p>   以上代码,其实我自己也不太明白,但是android-22,build-tools,tools那些大家应该大概猜到什么意思吧,下面那个cd library这个有没有必要实际也没测试过,因为我的开源库是在项目根目录的library,不过之前我没有那东西好像一直是build failing。</p><p>   网上很多的教程,都没有说如何去查看为什么会build failing,因为我自己也是一直build failing,代码编译肯定是没有问题的,出问题的就是.travis.yml配置有问题!!那么你会问:那我怎么知道.travis.yml哪里有问题呢,看图说话！<br><img src="/images/ci2.png" alt="ci2.png"><br>   上面提示好像是我没有那个gradlew文件吧,确实我gradlew没有那个文件。这个页面是在图1点击项目进去后那个页面里的,或许你会觉得我说这个有点多余,但是我相信很多人刚开始都不知道如何解决build failed!</p><h2 id="徽章图标获取"><a href="#徽章图标获取" class="headerlink" title="徽章图标获取"></a>徽章图标获取</h2><p><img src="/images/ci3.png" alt="ci3.ng"><br>点击那个build passing就出来这个界面了,就直接copy markdown的代码!</p><h2 id="提交-travis-yml到远程仓库"><a href="#提交-travis-yml到远程仓库" class="headerlink" title="提交.travis.yml到远程仓库"></a>提交.travis.yml到远程仓库</h2><p>   把代码添加完了,push上去后,它自动会帮你编译,结果无非就是成功和失败。如果失败的话,第一,要确定自己项目有没有问题,第二,就是.travis.yml的配置问题了。<br>   基本上三个步骤,就实现流行的build passing徽章!</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Travis-Ci有什么用&quot;&gt;&lt;a href=&quot;#Travis-Ci有什么用&quot; class=&quot;headerlink&quot; title=&quot;Travis Ci有什么用?&quot;&gt;&lt;/a&gt;Travis Ci有什么用?&lt;/h2&gt;&lt;p&gt;   我经常一直看到一些很强的开源项目里,都带着build passing这个徽章,至于build passing这个如何获得呢,这就需要Travis Ci这个持续集成的东西。Travios CI即持续集成系统。对个人而言，就是让你的代码在提交到远程——这里是GitHub——后，立即自动编译，并且在失败后可以自动给你发邮件的东西。当然，除了编译，还能做自动化测试、自动部署等。对团队或企业而言，这意味着更多的东西，是敏捷开发的一种践行。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://peng8350.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="https://peng8350.github.io/tags/Android/"/>
    
      <category term="Markdown" scheme="https://peng8350.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>记录Hexo+Page坑爹记录</title>
    <link href="https://peng8350.github.io/2017/09/28/hexo/"/>
    <id>https://peng8350.github.io/2017/09/28/hexo/</id>
    <published>2017-09-28T14:07:14.000Z</published>
    <updated>2018-03-10T08:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装HEXO坑记录"><a href="#安装HEXO坑记录" class="headerlink" title="安装HEXO坑记录"></a>安装HEXO坑记录</h2><p>搭建过程好像用了3-4天,由于本人对网页方面都不懂,真心累,什么Hexo+Node.js,以前也没有听说过这种东西。话说这种静态博客的模式限制很大,比如我想自定义一个网页什么的。在Ubuntu系统下,在第一个搭建Hexo步骤中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install npm</div><div class="line">sudo apt-get install node.js</div><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure><a id="more"></a><p>在hexo安装的过程中，突然会抛出下面的错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">   npm ERR! Failed at the hexo-util@0.6.0 postinstall script &apos;npm run build:highlight&apos;.</div><div class="line">npm ERR! Make sure you have the latest version of node.js and npm installed.</div><div class="line">npm ERR! If you do, this is most likely a problem with the hexo-util package,</div><div class="line">npm ERR! not with npm itself.</div><div class="line">npm ERR! Tell the author that this fails on your system:</div><div class="line">npm ERR!     npm run build:highlight</div><div class="line">npm ERR! You can get information on how to open an issue for this project with:</div><div class="line">npm ERR!     npm bugs hexo-util</div><div class="line">npm ERR! Or if that isn&apos;t available, you can get their info via:</div><div class="line">npm ERR!     npm owner ls hexo-util</div><div class="line">npm ERR! There is likely additional logging output above.</div></pre></td></tr></table></figure></p><p>出现这个问题是因为我的node.js版本太低了,通过命令行apt-get安装版本是4.2.6,最新是6.3多,解决方法是去他官方下载一个,可能是因为写教程的那时版本还不算太旧。</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>   解决上面的那个问题后,也不是这样就完了的,解压了node.js后放在一个地方后,要设置node.js的环境变量才能生效,这里我也搜了一下百度,至于为什么不google,就是因为本人的英语也不是太好,所以很难找关键字。那么问题来了,我配置环境变量的时候遇到了什么挫折呢?这里,网上我找到最多配置环境变量方法如下<br>首先sudo gedit /etc/profile,在后面下面两行,NODE_HOME指向你nodejs的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export NODE_HOME=/usr/local/node</div><div class="line">     export PATH=$NODE_HOME/bin:$PATH</div></pre></td></tr></table></figure><p>最后,source /etc/profile</p><p>   这样我就撞到了一个坑,就是确实在普通用户下输入hexo,确实没有问题,但是一旦我切换超级用户,sudo -s后,再输入hexo,它会提示你找不到没有node那个环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/env: node: 没有那个文件或目录</div></pre></td></tr></table></figure><p>   最后,我是通过在/~这个目录下(/home/$user),通过bashrc这个文件来生效环境变量,这可能是我ETC文件夹权限问题吧,重装后没有出现这个问题,那个时候莫名其妙地突然系统文件全部权限都不可写。</p><h2 id="hexo-d坑1"><a href="#hexo-d坑1" class="headerlink" title="hexo d坑1:"></a>hexo d坑1:</h2><p>   博主重装了系统,从github把博客代码clone了下来,修改了一下文章,打算重新post上去,hexo clean-&gt;hexo g这里步骤都没有问题,但是hexo d就遇到了一个很坑的问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Error: error: src refspec HEAD does not match any.</div><div class="line">error: 无法推送一些引用到 &apos;https://github.com/xxxx/xxxx.github.io.git&apos;</div></pre></td></tr></table></figure></p><p>   如上,从错误的意思来看,大概是说我没有什么东西可以提交上去,然后我看了看里面的public文件夹,确实被hexo g生成了,搞了半天原来是要先配置ssh,才可以上传上去,Ubuntu系统下操作如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;yourname&quot;</div><div class="line">git config --global user.email &quot;youremail&quot;</div></pre></td></tr></table></figure></p><p>   接下来,就是要生成ssh key<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</div></pre></td></tr></table></figure></p><p>   接着再hexo d就没有出现刚刚的问题了。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束!"></a>结束!</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装HEXO坑记录&quot;&gt;&lt;a href=&quot;#安装HEXO坑记录&quot; class=&quot;headerlink&quot; title=&quot;安装HEXO坑记录&quot;&gt;&lt;/a&gt;安装HEXO坑记录&lt;/h2&gt;&lt;p&gt;搭建过程好像用了3-4天,由于本人对网页方面都不懂,真心累,什么Hexo+Node.js,以前也没有听说过这种东西。话说这种静态博客的模式限制很大,比如我想自定义一个网页什么的。在Ubuntu系统下,在第一个搭建Hexo步骤中:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install npm&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install node.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-cli -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="爬坑" scheme="https://peng8350.github.io/categories/%E7%88%AC%E5%9D%91/"/>
    
    
      <category term="HTML+CSS" scheme="https://peng8350.github.io/tags/HTML-CSS/"/>
    
      <category term="Hexo" scheme="https://peng8350.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
